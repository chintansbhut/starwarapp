{"version":3,"sources":["history.js","apis/index.js","components/Login.jsx","actions/index.js","components/Search.jsx","actions/types.js","components/Planet.jsx","App.js","reducers/loginReducer.js","reducers/swapReducer.js","reducers/index.js","index.js"],"names":["createHistory","axios","create","baseURL","Login","state","userName","pswd","componentDidUpdate","prevProps","props","isLoggedIn","history","push","onChangeField","event","setState","target","name","value","onLoginClick","authenticateUser","this","pwd","className","placeholder","onChange","type","aria-hidden","onClick","React","Component","LoginContainer","connect","auth","userId","uname","dispatch","a","swapi","get","response","people","data","results","filter","user","birth_year","payload","Search","searchString","componentDidMount","onSearchChange","plannetSearch","searchResultRender","result","map","item","index","fontsize","to","onCLickLogout","LogoutUser","searchResult","class","length","SearchContainer","swapData","getState","sortedArray","sort","b","x","population","y","Number","Planet","planetData","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","PlannetContainer","ownProps","console","log","match","params","id","App","exact","path","component","INT_STATE","combineReducers","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ab8a6c7.chunk.js","sourcesContent":["import createHistory from \"history/createBrowserHistory\";\r\n\r\nexport default createHistory();\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({ baseURL: \"https://swapi.co/api/\" });\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../history\";\r\nimport \"./style.css\";\r\nimport { authenticateUser } from \"../actions\";\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    userName: null,\r\n    pswd: null\r\n  };\r\n\r\n  componentDidUpdate = prevProps => {\r\n    if (this.props.isLoggedIn) {\r\n      history.push(\"/search\");\r\n    }\r\n  };\r\n  onChangeField = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  onLoginClick = () => {\r\n    this.props.authenticateUser(this.state.userName, this.state.pswd);\r\n  };\r\n  render() {\r\n    let { userName, pwd } = this.state;\r\n    return (\r\n      <div className=\"ui center aligned middle aligned grid login-container\">\r\n        <div className=\"column login-module\">\r\n          <h2 className=\"ui teal center aligned header\">\r\n            Log-in to your account\r\n          </h2>\r\n          <div className=\"ui stacked segment\">\r\n            <div className=\"ui large form\">\r\n              <div className=\"field\">\r\n                <div className=\"ui fluid left icon input\">\r\n                  <input\r\n                    placeholder=\"User Name\"\r\n                    name=\"userName\"\r\n                    value={userName}\r\n                    onChange={this.onChangeField}\r\n                    type=\"text\"\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <div className=\"ui fluid left icon input\">\r\n                  <input\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"pswd\"\r\n                    value={pwd}\r\n                    onChange={this.onChangeField}\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"lock icon\"></i>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"ui teal large fluid button\"\r\n                onClick={this.onLoginClick}\r\n              >\r\n                Login\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  userId: state.auth.userId\r\n});\r\n\r\nconst LoginContainer = connect(mapStateToProps, {\r\n  authenticateUser\r\n})(Login);\r\nexport default LoginContainer;\r\n","import swapi from \"../apis\";\r\nimport { SEARCH_RESULT, LOGOUT_USER } from \"./types\";\r\nimport history from \"../history\";\r\nexport const LogoutUser = () => {\r\n  return {\r\n    type: LOGOUT_USER\r\n  };\r\n};\r\nexport const authenticateUser = (uname, pwd) => {\r\n  return async function(dispatch) {\r\n    let response = await swapi.get(`/people/?search=${uname}`);\r\n    const people = response.data.results;\r\n    let loginuser = people.filter(user => user.name === uname);\r\n    if (loginuser[0].birth_year === pwd) {\r\n      dispatch({ type: \"LOG_IN\", payload: { userId: uname } });\r\n      history.push(\"/search\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const plannetSearch = searchString => {\r\n  return async function(dispatch, getState) {\r\n    let response = await swapi.get(`/planets/?search=${searchString}`);\r\n    let sortedArray = response.data.results.sort((a, b) => {\r\n      let x = a.population;\r\n      let y = b.population;\r\n\r\n      if (x == \"unknown\") {\r\n        x = 0;\r\n      } else if (y == \"unknown\") {\r\n        y = 0;\r\n      }\r\n\r\n      return Number(x) < Number(y) ? -1 : Number(x) > Number(y) ? 1 : 0;\r\n    });\r\n    dispatch({ type: SEARCH_RESULT, payload: { searchResult: sortedArray } });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport history from \"../history\";\r\nimport { plannetSearch, LogoutUser } from \"../actions\";\r\nimport \"./style.css\";\r\nclass Search extends React.Component {\r\n  state = { searchString: \"\" };\r\n  componentDidMount = () => {\r\n    if (!this.props.isLoggedIn) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  componentDidUpdate = prevProps => {\r\n    if (!this.props.isLoggedIn) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  onSearchChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.props.plannetSearch(event.target.value);\r\n  };\r\n  searchResultRender = result => {\r\n    return result.map((item, index) => {\r\n      let fontsize = `w_${index} font_size_${index} segmnt `;\r\n      return (\r\n        <div className={fontsize}>\r\n          <Link to={`/planets/${item.name}`}>{item.name}</Link>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  onCLickLogout = () => {\r\n    this.props.LogoutUser();\r\n  };\r\n  render() {\r\n    let { searchResult } = this.props;\r\n    return (\r\n      <div class=\"ui  fluid container \">\r\n        <div class=\"ui centered  grid padded \">\r\n          <div class=\" teal row\">\r\n            <div class=\"three wide column\">SWAPI</div>\r\n            <div class=\"nine wide column\">\r\n              <div class=\"ui icon fluid input\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search...\"\r\n                  name=\"searchString\"\r\n                  onChange={this.onSearchChange}\r\n                  value={this.state.searchString}\r\n                />\r\n                <i aria-hidden=\"true\" class=\"search icon\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\" four wide column\">\r\n              <div class=\"item \">\r\n                <button\r\n                  class=\"ui button right floated\"\r\n                  onClick={this.onCLickLogout}\r\n                >\r\n                  Logout\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"resultContainer\">\r\n          {searchResult.length ? this.searchResultRender(searchResult) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    searchResult: state.swapData.searchResult\r\n  };\r\n};\r\n\r\nconst SearchContainer = connect(mapStateToProps, { plannetSearch, LogoutUser })(\r\n  Search\r\n);\r\nexport default SearchContainer;\r\n","export const SEARCH_RESULT = \"SEARCH_RESULT\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nclass Planet extends React.Component {\r\n  render() {\r\n    let { planetData } = this.props;\r\n    return (\r\n      <div class=\"plannetContainer\">\r\n        <h5 class=\"ui box header\">Plannet Details: </h5>\r\n        <div class=\"ui teal segment\">\r\n          <div class=\"ui cardBox  card\">\r\n            <div class=\"content\">\r\n              <div class=\"header\">{planetData.name}</div>\r\n              <div class=\"meta\"></div>\r\n            </div>\r\n            <div className=\"ui content\">\r\n              <div class=\"ui small feed\">\r\n                <div class=\"content\">\r\n                  <span class=\"right floated\">{planetData.population}</span>\r\n                  <b>population:</b>\r\n                </div>\r\n                <div class=\"content\">\r\n                  <span class=\"right floated\">\r\n                    {planetData.rotation_period}\r\n                  </span>\r\n                  <b>rotation_period:</b>\r\n                </div>\r\n                <div class=\"content\">\r\n                  <span class=\"right floated\">{planetData.orbital_period}</span>\r\n                  <b>orbital_period:</b>\r\n                </div>\r\n                <div class=\"content\">\r\n                  <span class=\"right floated\">{planetData.diameter}</span>\r\n                  <b>diameter:</b>\r\n                </div>\r\n                <div class=\"content\">\r\n                  <span class=\"right floated\">{planetData.climate}</span>\r\n                  <b>climate:</b>\r\n                </div>\r\n                <div class=\"content\">\r\n                  <span class=\"right floated\">{planetData.gravity}</span>\r\n                  <b>gravity:</b>\r\n                </div>\r\n                <div class=\"content\">\r\n                  <span class=\"right floated\">{planetData.terrain}</span>\r\n                  <b>terrain:</b>\r\n                </div>\r\n                <div class=\"content\">\r\n                  <span class=\"right floated\">{planetData.surface_water}</span>\r\n                  <b>surface_water:</b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"extra content\">\r\n              <div class=\"ui buttons\">\r\n                <Link to=\"/search\" class=\"ui green basic button\">\r\n                  Back to Search\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(\"owProps:\", ownProps.match.params);\r\n  return {\r\n    planetData: state.swapData.searchResult.filter(\r\n      item => item.name == ownProps.match.params.id\r\n    )[0]\r\n  };\r\n};\r\n\r\nconst PlannetContainer = connect(mapStateToProps)(Planet);\r\nexport default PlannetContainer;\r\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Search from \"./components/Search\";\nimport Planet from \"./components/Planet\";\nimport \"./index.css\";\nimport history from \"./history\";\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Switch>\n          <Route exact path=\"/\" exact component={Login} />\n          <Route path=\"/search\" component={Search} />\n          <Route path=\"/planets/:id\" component={Planet} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const INT_STATE = {\r\n  isLoggedIn: null,\r\n  userId: null\r\n};\r\n\r\nexport default (state = INT_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"LOG_IN\":\r\n      return { ...state, isLoggedIn: true, userId: action.payload.userId };\r\n    case \"LOGOUT_USER\":\r\n      return { ...state, isLoggedIn: false, userId: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SEARCH_RESULT } from \"../actions/types\";\r\nconst INT_STATE = {\r\n  searchResult: []\r\n};\r\nexport default (state = INT_STATE, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_RESULT:\r\n      return { ...state, searchResult: action.payload.searchResult };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./loginReducer\";\r\nimport swapReducer from \"./swapReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  swapData: swapReducer\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reduxThunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reducers from \"../src/reducers\";\nconst store = createStore(reducers, applyMiddleware(reduxThunk));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}